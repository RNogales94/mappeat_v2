# -*- coding: utf-8 -*-
# Generated by Django 1.11.4 on 2017-09-06 09:52
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import mainRest.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Family',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Icon',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='')),
                ('name', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='Ingredient',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='Inventory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(db_index=True, default=mainRest.models.Inventory.defaultDate)),
                ('quantity', models.IntegerField(default=0)),
                ('available', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='IVA',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=15)),
                ('tax', models.FloatField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Mesure_Unity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=15)),
                ('simbol', models.CharField(max_length=3)),
            ],
        ),
        migrations.CreateModel(
            name='Owner',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=40)),
                ('surname', models.CharField(max_length=40)),
                ('location', models.CharField(blank=True, max_length=30)),
                ('birth_date', models.DateField(blank=True, null=True)),
                ('phone_number', models.CharField(blank=True, max_length=12)),
                ('user', models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('principal', models.BooleanField(default=True)),
                ('can_be_complement', models.BooleanField(default=False)),
                ('price_with_tax', models.FloatField(default=0)),
                ('price_as_complement_with_tax', models.FloatField(default=0)),
                ('icon', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='mainRest.Icon')),
                ('iva_tax', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='mainRest.IVA')),
            ],
        ),
        migrations.CreateModel(
            name='Product_Class',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('icon', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='mainRest.Icon')),
                ('recomended_family', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='mainRest.Family')),
            ],
        ),
        migrations.CreateModel(
            name='Product_Family',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('family', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mainRest.Family')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mainRest.Product')),
            ],
        ),
        migrations.CreateModel(
            name='Provider',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=40)),
            ],
        ),
        migrations.CreateModel(
            name='Restaurant',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=40)),
                ('address', models.CharField(max_length=90)),
                ('city', models.CharField(max_length=90)),
                ('province', models.CharField(blank=True, max_length=90)),
                ('lat', models.FloatField(blank=True, null=True)),
                ('lng', models.FloatField(blank=True, null=True)),
                ('owner', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='mainRest.Owner')),
            ],
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('cost', models.FloatField()),
                ('provider', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mainRest.Provider')),
                ('restaurant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mainRest.Restaurant')),
            ],
        ),
        migrations.CreateModel(
            name='Staff',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(default='', max_length=20)),
                ('last_name', models.CharField(default='', max_length=50)),
                ('is_active', models.BooleanField(default=True)),
                ('hourly_rate', models.FloatField(blank=True, default=None, null=True)),
                ('notes', models.TextField(blank=True, default='', null=True)),
                ('role_code', models.CharField(choices=[('W', 'Camarero'), ('K', 'Cocinero'), ('B', 'Barman'), ('M', 'Manager')], default='M', max_length=1)),
                ('restaurant', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='mainRest.Restaurant')),
                ('user', models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Supply',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=40)),
                ('size', models.FloatField(null=True)),
                ('is_storable', models.BooleanField(default=True)),
                ('barcode', models.IntegerField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Supply_Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='Table',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.IntegerField()),
                ('type_table', models.CharField(choices=[('M', 'Mesa'), ('T', 'Terraza'), ('B', 'Barra')], max_length=1)),
                ('is_available', models.BooleanField(default=True)),
                ('restaurant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mainRest.Restaurant')),
            ],
        ),
        migrations.CreateModel(
            name='Ticket_Detail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_name', models.CharField(default='None', max_length=50)),
                ('isComplement', models.BooleanField(default=False)),
                ('quantity', models.IntegerField()),
                ('price', models.FloatField(default=0)),
                ('time', models.TimeField(default=mainRest.models.Ticket_Detail.defaultTime)),
                ('sent_kitchen', models.BooleanField(default=False)),
                ('product', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='mainRest.Product')),
            ],
        ),
        migrations.CreateModel(
            name='Ticket_Resume',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(db_index=True, default=mainRest.models.Ticket_Resume.defaultDate)),
                ('time', models.TimeField(db_index=True, default=mainRest.models.Ticket_Resume.defaultTime)),
                ('cost', models.FloatField(default=0)),
                ('is_closed', models.BooleanField(db_index=True, default=False)),
                ('restaurant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mainRest.Restaurant')),
                ('staff', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mainRest.Staff')),
                ('table', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mainRest.Table')),
            ],
        ),
        migrations.AddField(
            model_name='ticket_detail',
            name='ticket',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mainRest.Ticket_Resume'),
        ),
        migrations.AddField(
            model_name='supply',
            name='category',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='mainRest.Supply_Category'),
        ),
        migrations.AddField(
            model_name='supply',
            name='mesure_unity',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='mainRest.Mesure_Unity'),
        ),
        migrations.AddField(
            model_name='service',
            name='supply',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mainRest.Supply'),
        ),
        migrations.AddField(
            model_name='product_family',
            name='restaurant',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='mainRest.Restaurant'),
        ),
        migrations.AddField(
            model_name='product',
            name='product',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mainRest.Product_Class'),
        ),
        migrations.AddField(
            model_name='product',
            name='restaurant',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mainRest.Restaurant'),
        ),
        migrations.AddField(
            model_name='inventory',
            name='restaurant',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mainRest.Restaurant'),
        ),
        migrations.AddField(
            model_name='inventory',
            name='supply',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='mainRest.Supply'),
        ),
        migrations.AddField(
            model_name='ingredient',
            name='product',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='mainRest.Product'),
        ),
        migrations.AddField(
            model_name='ingredient',
            name='supply',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='mainRest.Supply'),
        ),
        migrations.AddField(
            model_name='family',
            name='icon',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='mainRest.Icon'),
        ),
        migrations.AlterUniqueTogether(
            name='table',
            unique_together=set([('number', 'restaurant', 'type_table')]),
        ),
        migrations.AlterUniqueTogether(
            name='product',
            unique_together=set([('name', 'restaurant')]),
        ),
    ]
